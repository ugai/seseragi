import { Button, VerticalBox, HorizontalBox, Palette, ScrollView } from "std-widgets.slint";

import { AlembicNodeList, SlintAlembicNodeListItem } from "alembic_node_list.slint";
import { AboutPopupContent, AppInfo } from "app_info.slint";

export component AppWindow inherits Window {
    title: app_info.name;
    icon: @image-url("../asset/icon-64.png");
    preferred-width: 500px;
    preferred-height: 500px;

    in property <AppInfo> app_info;
    in property <[SlintAlembicNodeListItem]> tree_list;
    in-out property <bool> file_opened;
    in-out property <string> file_path;

    callback open_button_clicked <=> open_button.clicked;
    callback reload_button_clicked <=> reload_button.clicked;
    callback clear_file;
    callback reload_file;

    about_popup := PopupWindow {
        width: root.width - 2rem;
        padding-right: 1rem;
        x: 1rem;
        y: 1rem;
        AboutPopupContent {
            app_info: app_info;
        }
    }

    VerticalBox {
        button_bar := HorizontalBox {
            open_button := Button {
                text: "📂 Open...";
                horizontal-stretch: 1;
            }
            reload_button := Button {
                text: "🔄️ Reload";
                enabled: file_opened;
                horizontal-stretch: 1;
            }
            about_button := Button {
                text: "❔";
                clicked => { about_popup.show() }
            }
        }

        HorizontalBox {
            visible: file_path != "";
            Text {
                text: "File: ";
                horizontal-stretch: 0;
            }
            TextInput {
                text: file_path;
                horizontal-alignment: left;
                horizontal-stretch: 1;
                read-only: true;
            }
        }

        ScrollView {
            preferred-width: scroll_inner.preferred-width;
            preferred-height: scroll_inner.preferred-height;

            scroll_inner := VerticalBox {
                AlembicNodeList {
                    indent_width: 16px;
                    nodes: tree_list;
                }
                Rectangle { vertical-stretch: 1; } // filler
            }
        }
    }
}
